import "bootstrap/dist/css/bootstrap.min.css";
import React from "react";
import Navbar from "../../Components/Navbar";
import styles from "../../styles/listings.module.css";
import Searchbar from "../../Components/Searchbar";
import Head from "next/head";

// PLAN
// set up getStaticprops
// make a fetch GET request to https://it-crowd-project.herokuapp.com/api/items
// retur props, items: data
// destructure items array
// map over the array  and for each render </card> with database details dynamically updated
// pass down props into card component; item_id, user_id, category, item_name, item_description, use_by_date, date_added, quantity, cloudinary_id, is_reserved, availability, time_slot

// export const getStaticProps = async () => {
//    const res = await fetch(`https://it-crowd-project.herokuapp.com/api/items`);

//    const data = await res.json();
//    console.log(data);
//    return {
//       props: { items: data.payload },
//    };
// };

// function Listings({ items }) {

function ListingsPage( registeredUserAvatar, userEmail ) {
    // const newUser = registeredUser.registeredUser;
    const newAvatar = registeredUserAvatar;
    // console.log(newUser);
    console.log(newAvatar);

  return (
    <>
      <Head>
        <title>iGive</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <style>
          @import
          url('https://fonts.googleapis.com/css2?family=Montserrat&display=swap');
        </style>
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
        ></link>
      </Head>
      <Navbar registeredUserAvatar={registeredUserAvatar} userEmail={userEmail}/>
      <div className={styles.searchbar}>
        <Searchbar />
      </div>
      <div className={styles.container}>
        {/* {items.map((item) => (
          <div key={item.id}>
            <Card
              item_id={item.id}
              user_id={item.user_id}
              category={item.category}
              item_name={item.item_name}
              item_description={item.item_description}
              use_by_date={item.use_by_date}
              date_added={item.date_added}
              quantity={item.date_added}
              cloudinary_id={item.cloudinary_id}
              is_reserved={item.is_reserved}
              availability={item.availability}
              time_slot={item.time_slot}
            />
          </div>
        ))} */}
        ;
      </div>
    </>
  );
}

export default ListingsPage;